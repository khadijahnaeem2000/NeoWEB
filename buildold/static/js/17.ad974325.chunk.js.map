{"version":3,"sources":["components/Directo/Directo.js"],"names":["ZoomMtg","setZoomJSLib","preLoadWasm","prepareJssdk","i18n","load","reload","Directo","data","getLocalUserdata","sdkKey","meetingNumber","leaveUrl","window","location","href","userName","passWord","OpenJoinAudio","btn","document","getElementsByClassName","joinDialog","click","JoinAudioAuto","wait","callback","seconds","setTimeout","getSignature","fetch","method","headers","body","JSON","stringify","role","then","res","json","response","signature","token","getElementsByTagName","style","display","getElementById","init","success","translations","getAll","overridenTranslations","Object","assign","join","userEmail","tk","error","console","log","catch","useEffect"],"mappings":"qIAAA,qDAMAA,UAAQC,aAAa,oCAAqC,OAE1DD,UAAQE,cACRF,UAAQG,eAGRH,UAAQI,KAAKC,KAAK,SAClBL,UAAQI,KAAKE,OAAO,SAiLLC,UA/KC,WACd,IAAMC,EAAOC,cAGTC,EAAS,uCACTC,EAAgB,aAEhBC,EAAWC,OAAOC,SAASC,KAC3BC,EAAU,IACK,OAAhBR,EAAKQ,WACNA,EAASR,EAAKQ,UAEhB,IACIC,EAAW,SAkBjB,SAASC,IAEP,IAAIC,EAAIC,SAASC,uBAAuB,6BAA6B,GACjEC,EAAWF,SAASC,uBAAuB,eAAe,GAE3DF,IAAQG,GACPH,EAAII,OAIT,CAED,SAASC,IACP,IAAIL,EAAIC,SAASC,uBAAuB,gCAAgC,GAErEF,GACCA,EAAII,OAIT,CAED,IAAME,EAAO,SAAEC,EAAUC,GACvB,OAAOd,OAAOe,WAAYF,EAAoB,IAAVC,EACrC,EAEC,SAASE,IAEPC,MAxDsB,sCAwDG,CACvBC,OAAQ,OACRC,QAAS,CAAE,eAAgB,oBAC3BC,KAAMC,KAAKC,UAAU,CACnBxB,cAAeA,EACfyB,KA1DK,MA4DNC,MAAK,SAAAC,GAAG,OAAIA,EAAIC,MAAR,IACVF,MAAK,SAAAG,GAsDR,IAAsBC,IArDLD,EAASE,MAsDxBtB,SAASuB,qBAAqB,UAAU,GAAGC,MAAMC,QAAQ,OACzDzB,SAAS0B,eAAe,cAAcF,MAAMC,QAAU,QAEtD7C,UAAQ+C,KAAK,CACXnC,SAAUA,EACVoC,QAAS,SAACA,GACR,IAAIC,EAAejD,UAAQI,KAAK8C,OAAO,SACnCC,EAAwBC,OAAOC,OAAO,CAAC,EAAGJ,EAAc,CAC3D,wBAAyB,+BAE1BjD,UAAQI,KAAKC,KAAK8C,EAAuB,SACzCnD,UAAQI,KAAKE,OAAO,SAEpBN,UAAQsD,KAAK,CACXb,UAAWA,EACX9B,cAAeA,EACfK,SAAUA,EACVN,OAAQA,EACR6C,UAhIQ,GAiIRtC,SAAUA,EACVuC,GA/Hc,GAgIdR,QAAS,SAACA,GA5HJ5B,SAASC,uBAAuB,gCAAgC,IAK1EI,EAAKP,EAAe,IAFpBO,EAAKD,EAAe,GA2Hf,EACDiC,MAAO,SAACA,GACNC,QAAQC,IAAIF,EACb,GAGJ,EACDA,MAAO,SAACA,GACNC,QAAQC,IAAIF,EACb,GArFF,IAAEG,OAAM,SAAAH,GACPC,QAAQD,MAAMA,EACf,GACF,CAkGD,OAZAI,qBAAU,WASRhC,GACD,GAAC,IAGA,uBAEH,C","file":"static/js/17.ad974325.chunk.js","sourcesContent":["import React, {useEffect} from 'react'\r\nimport { ZoomMtg } from '@zoomus/websdk'\r\n\r\nimport { getLocalUserdata } from \"../../services/auth/localStorageData\";\r\nimport './styles.css'\r\n\r\nZoomMtg.setZoomJSLib('https://source.zoom.us/2.12.0/lib', '/av')\r\n\r\nZoomMtg.preLoadWasm()\r\nZoomMtg.prepareJssdk()\r\n\r\n// loads language files, also passes any error messages to the ui\r\nZoomMtg.i18n.load('es-ES')\r\nZoomMtg.i18n.reload('es-ES')\r\n\r\nconst Directo = () => {\r\n  const data = getLocalUserdata();\r\n\r\n  var signatureEndpoint = 'https://neoestudio.net/api/JwtToken'\r\n  var sdkKey = 'ejMUC7sZJxrReEZ4iLrllWD4iYqM9W6tOqpS'\r\n  var meetingNumber = '4269760334'\r\n  var role = 0\r\n  var leaveUrl = window.location.href\r\n  var userName= '-'\r\n  if(data.userName!==null){\r\n    userName=data.userName\r\n  }\r\n  var userEmail = ''\r\n  var passWord = 'Ehkuc2'\r\n  // pass in the registrant's token if meeting or webinar requires registration.\r\n  var registrantToken = ''\r\n\r\n  function HideJoinAudio () {\r\n\r\n    let joinBtn=document.getElementsByClassName(\"join-audio-by-voip__join-btn\")[0];\r\n\r\n    if(joinBtn) {\r\n      wait(JoinAudioAuto, 0.5);\r\n    } else {\r\n      wait(OpenJoinAudio, 0.5);\r\n      wait(JoinAudioAuto, 0.5);\r\n    }\r\n\r\n    return;\r\n  }\r\n\r\nfunction OpenJoinAudio () {\r\n\r\n  let btn=document.getElementsByClassName(\"join-audio-container__btn\")[0];\r\n  let joinDialog=document.getElementsByClassName(\"join-dialog\")[0];\r\n\r\n  if(btn && !joinDialog) {\r\n      btn.click();\r\n  }\r\n\r\n  return;\r\n}\r\n\r\nfunction JoinAudioAuto () {\r\n  let btn=document.getElementsByClassName(\"join-audio-by-voip__join-btn\")[0];\r\n\r\n  if(btn) {\r\n      btn.click();\r\n  }\r\n\r\n  return;\r\n}\r\n\r\nconst wait = ( callback, seconds) => {\r\n  return window.setTimeout( callback, seconds * 1000 );\r\n}\r\n\r\n  function getSignature() {\r\n\r\n    fetch(signatureEndpoint, {\r\n      method: 'POST',\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body: JSON.stringify({\r\n        meetingNumber: meetingNumber,\r\n        role: role\r\n      })\r\n    }).then(res => res.json())\r\n    .then(response => {\r\n      startMeeting(response.token)\r\n    }).catch(error => {\r\n      console.error(error)\r\n    })\r\n  };\r\n\r\n  const listenForAudioButtonNode = (params, callback) => {\r\n\r\n    new MutationObserver(function(mutations) {\r\n      const el = document.querySelector(params.className);\r\n  \r\n      if (el) {\r\n        this.disconnect();\r\n        callback(el);\r\n      }\r\n    }).observe(params.parent || document, {\r\n      subtree: true,\r\n      childList: true,\r\n    });\r\n  }\r\n\r\n  const autoAudioJoin = (audioButton) => {\r\n\r\n    const config = {\r\n      attributes: true,\r\n      childList: true,\r\n      attributeOldValue: true,\r\n      subtree: true\r\n    };\r\n\r\n    const canClick = oldValue => {\r\n      return oldValue ===\r\n        \"zm-btn join-audio-by-voip__join-btn zm-btn--primary zm-btn__outline--white zm-btn--lg\";\r\n    }\r\n\r\n    const isJoined = oldValue => {\r\n      return oldValue === 'display: inline-block;';\r\n    }\r\n    const observer = new MutationObserver(mutations => {\r\n      mutations.forEach(mutation => {\r\n        if (canClick(mutation.oldValue)) {\r\n          // When join button becomes clickable.\r\n          audioButton.click();\r\n        } else if (isJoined(mutation.oldValue)) {\r\n          // When connected to audio.\r\n          observer.disconnect();\r\n        }\r\n      });\r\n    });\r\n\r\n    observer.observe(audioButton, config);\r\n  }\r\n\r\n  function startMeeting(signature) {\r\n    document.getElementsByTagName('header')[0].style.display='none';\r\n    document.getElementById('zmmtg-root').style.display = 'block';\r\n\r\n    ZoomMtg.init({\r\n      leaveUrl: leaveUrl,\r\n      success: (success) => {        \r\n        var translations = ZoomMtg.i18n.getAll(\"es-ES\");\r\n        var overridenTranslations = Object.assign({}, translations, {\r\n         \"apac.wc_chat.type_msg\": \"Escribir mensaje aquâ€¦\",\r\n        });\r\n        ZoomMtg.i18n.load(overridenTranslations, 'es-ES');\r\n        ZoomMtg.i18n.reload('es-ES');\r\n\r\n        ZoomMtg.join({\r\n          signature: signature,\r\n          meetingNumber: meetingNumber,\r\n          userName: userName,\r\n          sdkKey: sdkKey,\r\n          userEmail: userEmail,\r\n          passWord: passWord,\r\n          tk: registrantToken,\r\n          success: (success) => {\r\n            HideJoinAudio();\r\n          },\r\n          error: (error) => {\r\n            console.log(error)\r\n          }\r\n        })\r\n\r\n      },\r\n      error: (error) => {\r\n        console.log(error)\r\n      }\r\n    })\r\n  }\r\n\r\n  useEffect(() => {\r\n    {/*listenForAudioButtonNode(\r\n      {\r\n        className: '.zm-btn.zm-btn--primary.zm-btn__outline--white.zm-btn--lg',\r\n        parent: document.getElementById('zmmtg-root'),  // SETUP your own zoom root DOM element name here\r\n        recursive: false\r\n      },\r\n      element => autoAudioJoin(element)\r\n    );*/}\r\n    getSignature();\r\n  },[])\r\n\r\n  return (\r\n    <div></div>\r\n  )\r\n}\r\n\r\nexport default Directo\r\n"],"sourceRoot":""}