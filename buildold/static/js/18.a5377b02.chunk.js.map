{"version":3,"sources":["pages/Directo/index.js"],"names":["ZoomMtg","setZoomJSLib","preLoadWasm","prepareJssdk","i18n","load","reload","Directo","useSearchParams","searchParams","useState","userName","setUserName","sdkKey","meetingNumber","leaveUrl","window","location","origin","passWord","OpenJoinAudio","btn","document","getElementsByClassName","joinDialog","click","JoinAudioAuto","wait","callback","seconds","setTimeout","getSignature","fetch","method","headers","body","JSON","stringify","role","then","res","json","response","signature","token","getElementById","style","display","init","success","translations","getAll","overridenTranslations","Object","assign","join","userEmail","tk","error","console","log","catch","useEffect","userId","get","id","status","data","replace","alert","decryptUser"],"mappings":"wMAOAA,UAAQC,aAAa,oCAAqC,OAE1DD,UAAQE,cACRF,UAAQG,eAGRH,UAAQI,KAAKC,KAAK,SAClBL,UAAQI,KAAKE,OAAO,SA6ILC,UA3IC,WAEd,MAAuBC,cAAhBC,EAAP,oBACA,EAAgCC,mBAAS,KAAzC,mBAAOC,EAAP,KAAiBC,EAAjB,KAEIC,EAAS,uCACTC,EAAgB,aAEhBC,EAAWC,OAAOC,SAASC,OAE3BC,EAAW,SAkBjB,SAASC,IAEP,IAAIC,EAAIC,SAASC,uBAAuB,6BAA6B,GACjEC,EAAWF,SAASC,uBAAuB,eAAe,GAE3DF,IAAQG,GACPH,EAAII,OAIT,CAED,SAASC,IACP,IAAIL,EAAIC,SAASC,uBAAuB,gCAAgC,GAErEF,GACCA,EAAII,OAIT,CAED,IAAME,EAAO,SAAEC,EAAUC,GACvB,OAAOb,OAAOc,WAAYF,EAAoB,IAAVC,EACrC,EAEC,SAASE,IACPC,MAnDsB,sCAmDG,CACvBC,OAAQ,OACRC,QAAS,CAAE,eAAgB,oBAC3BC,KAAMC,KAAKC,UAAU,CACnBvB,cAAeA,EACfwB,KArDK,MAuDNC,MAAK,SAAAC,GAAG,OAAIA,EAAIC,MAAR,IACVF,MAAK,SAAAG,GAOR,IAAsBC,IANLD,EAASE,MAQxBtB,SAASuB,eAAe,cAAcC,MAAMC,QAAU,QAEtD/C,UAAQgD,KAAK,CACXjC,SAAUA,EACVkC,QAAS,SAACA,GACR,IAAIC,EAAelD,UAAQI,KAAK+C,OAAO,SACnCC,EAAwBC,OAAOC,OAAO,CAAC,EAAGJ,EAAc,CAC3D,wBAAyB,+BAE1BlD,UAAQI,KAAKC,KAAK+C,EAAuB,SACzCpD,UAAQI,KAAKE,OAAO,SAEpBN,UAAQuD,KAAK,CACXZ,UAAWA,EACX7B,cAAeA,EACfH,SAAUA,EACVE,OAAQA,EACR2C,UAhFQ,GAiFRrC,SAAUA,EACVsC,GA/Ec,GAgFdR,QAAS,SAACA,GA5EJ3B,SAASC,uBAAuB,gCAAgC,IAK1EI,EAAKP,EAAe,IAFpBO,EAAKD,EAAe,GA2Ef,EACDgC,MAAO,SAACA,GACNC,QAAQC,IAAIF,EACb,GAGJ,EACDA,MAAO,SAACA,GACNC,QAAQC,IAAIF,EACb,GAtCF,IAAEG,OAAM,SAAAH,GACPC,QAAQD,MAAMA,EACf,GACF,CAkED,OALAI,qBAAU,YAtBU,WAClB,IAAMC,EAAStD,EAAauD,IAAI,MAEhChC,MAAM,kCAAmC,CACrCC,OAAQ,OACRC,QAAS,CAAE,eAAgB,oBAC3BC,KAAMC,KAAKC,UAAU,CACnB4B,GAAIF,MAELxB,MAAK,SAAAC,GAAG,OAAIA,EAAIC,MAAR,IACVF,MAAK,SAAAG,GACiB,gBAAlBA,EAASwB,OACRtD,EAAY8B,EAASyB,KAAKxD,WAE1BK,OAAOC,SAASmD,QAAQpD,OAAOC,SAASC,QACxCmD,MAAM,0EAEX,IAAER,OAAM,SAAAH,GACPC,QAAQD,MAAMA,EACf,GACJ,CAGCY,GACAvC,GACD,GAAC,IAGA,uBAEH,C","file":"static/js/18.a5377b02.chunk.js","sourcesContent":["import React, {useEffect, useState} from 'react'\r\nimport { ZoomMtg } from '@zoomus/websdk'\r\nimport { useSearchParams } from 'react-router-dom';\r\nimport { toast } from 'react-toastify';\r\n\r\nimport './styles.css'\r\n\r\nZoomMtg.setZoomJSLib('https://source.zoom.us/2.12.0/lib', '/av')\r\n\r\nZoomMtg.preLoadWasm()\r\nZoomMtg.prepareJssdk()\r\n\r\n// loads language files, also passes any error messages to the ui\r\nZoomMtg.i18n.load('es-ES')\r\nZoomMtg.i18n.reload('es-ES')\r\n\r\nconst Directo = () => {\r\n\r\n  const [searchParams] = useSearchParams();\r\n  const [userName, setUserName] = useState('-');\r\n  var signatureEndpoint = 'https://neoestudio.net/api/JwtToken'\r\n  var sdkKey = 'ejMUC7sZJxrReEZ4iLrllWD4iYqM9W6tOqpS'\r\n  var meetingNumber = '4269760334'\r\n  var role = 0\r\n  var leaveUrl = window.location.origin\r\n  var userEmail = ''\r\n  var passWord = 'Ehkuc2'\r\n  // pass in the registrant's token if meeting or webinar requires registration.\r\n  var registrantToken = ''\r\n\r\n  function HideJoinAudio () {\r\n\r\n    let joinBtn=document.getElementsByClassName(\"join-audio-by-voip__join-btn\")[0];\r\n\r\n    if(joinBtn) {\r\n      wait(JoinAudioAuto, 0.5);\r\n    } else {\r\n      wait(OpenJoinAudio, 0.5);\r\n      wait(JoinAudioAuto, 0.5);\r\n    }\r\n\r\n    return;\r\n  }\r\n\r\nfunction OpenJoinAudio () {\r\n\r\n  let btn=document.getElementsByClassName(\"join-audio-container__btn\")[0];\r\n  let joinDialog=document.getElementsByClassName(\"join-dialog\")[0];\r\n\r\n  if(btn && !joinDialog) {\r\n      btn.click();\r\n  }\r\n\r\n  return;\r\n}\r\n\r\nfunction JoinAudioAuto () {\r\n  let btn=document.getElementsByClassName(\"join-audio-by-voip__join-btn\")[0];\r\n\r\n  if(btn) {\r\n      btn.click();\r\n  }\r\n\r\n  return;\r\n}\r\n\r\nconst wait = ( callback, seconds) => {\r\n  return window.setTimeout( callback, seconds * 1000 );\r\n}\r\n\r\n  function getSignature() {\r\n    fetch(signatureEndpoint, {\r\n      method: 'POST',\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body: JSON.stringify({\r\n        meetingNumber: meetingNumber,\r\n        role: role\r\n      })\r\n    }).then(res => res.json())\r\n    .then(response => {\r\n      startMeeting(response.token)\r\n    }).catch(error => {\r\n      console.error(error)\r\n    })\r\n  };\r\n\r\n  function startMeeting(signature) {\r\n    //document.getElementsByTagName('header')[0].style.display='none';\r\n    document.getElementById('zmmtg-root').style.display = 'block';\r\n\r\n    ZoomMtg.init({\r\n      leaveUrl: leaveUrl,\r\n      success: (success) => {        \r\n        var translations = ZoomMtg.i18n.getAll(\"es-ES\");\r\n        var overridenTranslations = Object.assign({}, translations, {\r\n         \"apac.wc_chat.type_msg\": \"Escribir mensaje aqu…\",\r\n        });\r\n        ZoomMtg.i18n.load(overridenTranslations, 'es-ES');\r\n        ZoomMtg.i18n.reload('es-ES');\r\n\r\n        ZoomMtg.join({\r\n          signature: signature,\r\n          meetingNumber: meetingNumber,\r\n          userName: userName,\r\n          sdkKey: sdkKey,\r\n          userEmail: userEmail,\r\n          passWord: passWord,\r\n          tk: registrantToken,\r\n          success: (success) => {\r\n            HideJoinAudio();\r\n          },\r\n          error: (error) => {\r\n            console.log(error)\r\n          }\r\n        })\r\n\r\n      },\r\n      error: (error) => {\r\n        console.log(error)\r\n      }\r\n    })\r\n  }\r\n\r\n  const decryptUser = () => {\r\n    const userId = searchParams.get('id'); // \"testCode\"\r\n    \r\n    fetch('https://neoestudio.net/api/user', {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({\r\n          id: userId,\r\n        })\r\n      }).then(res => res.json())\r\n      .then(response => {\r\n        if(response.status==='Successfull') {\r\n            setUserName(response.data.userName);\r\n        } else {\r\n            window.location.replace(window.location.origin);\r\n            alert('No se puede unir a la clase en vivo, el usuario no está registrado.');\r\n        }\r\n      }).catch(error => {\r\n        console.error(error)\r\n      })\r\n  }\r\n\r\n  useEffect(() => {\r\n    decryptUser();\r\n    getSignature();\r\n  },[])\r\n\r\n  return (\r\n    <div></div>\r\n  )\r\n}\r\n\r\nexport default Directo\r\n"],"sourceRoot":""}