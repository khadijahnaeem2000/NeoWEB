{"version":3,"sources":["pages/Directo/index.js"],"names":["ZoomMtg","setZoomJSLib","preLoadWasm","prepareWebSDK","i18n","load","reload","Directo","useSearchParams","searchParams","useState","userName","setUserName","sdkKey","meetingNumber","leaveUrl","window","location","href","passWord","OpenJoinAudio","btn","document","getElementsByClassName","joinDialog","click","JoinAudioAuto","wait","callback","seconds","setTimeout","getSignature","fetch","method","headers","body","JSON","stringify","role","then","res","json","response","signature","token","getElementById","style","display","init","success","console","log","join","userEmail","error","catch","useEffect","userId","get","id","status","data","name","alert","decryptUser"],"mappings":"wMAOAA,UAAQC,aAAa,oCAAqC,OAE1DD,UAAQE,cACRF,UAAQG,gBAGRH,UAAQI,KAAKC,KAAK,SAClBL,UAAQI,KAAKE,OAAO,SA2ILC,UAzIC,WACd,MAAuBC,cAAhBC,EAAP,oBACA,EAAgCC,mBAAS,KAAzC,mBAAOC,EAAP,KAAiBC,EAAjB,KAEIC,EAAS,uCACTC,EAAgB,aAChBC,EAAWC,OAAOC,SAASC,KAE3BC,EAAW,SAmBf,SAASC,IACP,IAAIC,EAAMC,SAASC,uBAAuB,6BAA6B,GACnEC,EAAaF,SAASC,uBAAuB,eAAe,GAE5DF,IAAQG,GACVH,EAAII,OAIP,CAED,SAASC,IACP,IAAIL,EAAMC,SAASC,uBACjB,gCACA,GAEEF,GACFA,EAAII,OAIP,CAED,IAAME,EAAO,SAACC,EAAUC,GACtB,OAAOb,OAAOc,WAAWF,EAAoB,IAAVC,EACpC,EAED,SAASE,IACPC,MApDsB,sCAoDG,CACvBC,OAAQ,OACRC,QAAS,CAAE,eAAgB,oBAC3BC,KAAMC,KAAKC,UAAU,CACnBvB,cAAeA,EACfwB,KAAM,MAGPC,MAAK,SAACC,GAAD,OAASA,EAAIC,MAAb,IACLF,MAAK,SAACG,GAQX,IAAsBC,IAPHD,EAASE,MAS1BtB,SAASuB,eAAe,cAAcC,MAAMC,QAAU,QAEtD/C,UAAQgD,KAAK,CACXjC,SAAUA,EACVkC,QAAS,SAACA,GACRC,QAAQC,IAAI,YACZnD,UAAQoD,KAAK,CACXT,UAAWA,EACX7B,cAAeA,EACfH,SAAUA,EACVE,OAAQA,EACRwC,UA9EQ,GA+ERlC,SAAUA,EACV8B,QAAS,SAACA,GACRC,QAAQC,IAAI,MA3EN7B,SAASC,uBACrB,gCACA,IAKAI,EAAKP,EAAe,IAFpBO,EAAKD,EAAe,GAwEf,EACD4B,MAAO,SAACA,GACNJ,QAAQC,IAAIG,EACb,GAEJ,EACDA,MAAO,SAACA,GACNJ,QAAQC,IAAIG,EACb,GAhCA,IACAC,OAAM,SAACD,GACNJ,QAAQI,MAAMA,EACf,GACJ,CAgED,OALAE,qBAAU,YA3BU,WAClB,IAAMC,EAAShD,EAAaiD,IAAI,MAEhC1B,MAAM,kCAAmC,CACvCC,OAAQ,OACRC,QAAS,CAAE,eAAgB,oBAC3BC,KAAMC,KAAKC,UAAU,CACnBsB,GAAIF,MAGLlB,MAAK,SAACC,GAAD,OAASA,EAAIC,MAAb,IACLF,MAAK,SAACG,GACmB,gBAApBA,EAASkB,QACXhD,EAAY8B,EAASmB,KAAKC,MAC1BZ,QAAQC,IAAIT,EAASmB,KAAKC,QAE1BZ,QAAQC,IAAIT,GACZqB,MACE,0EAGL,IACAR,OAAM,SAACD,GACNJ,QAAQI,MAAMA,EACf,GACJ,CAGCU,GACAjC,GACD,GAAE,IAEI,uBACR,C","file":"static/js/18.c9a43939.chunk.js","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { ZoomMtg } from \"@zoom/meetingsdk\";\r\nimport { useSearchParams } from \"react-router-dom\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nimport \"./styles.css\";\r\n\r\nZoomMtg.setZoomJSLib(\"https://source.zoom.us/3.8.10/lib\", \"/av\");\r\n\r\nZoomMtg.preLoadWasm();\r\nZoomMtg.prepareWebSDK();\r\n\r\n// loads language files, also passes any error messages to the ui\r\nZoomMtg.i18n.load(\"es-ES\");\r\nZoomMtg.i18n.reload(\"es-ES\");\r\n\r\nconst Directo = () => {\r\n  const [searchParams] = useSearchParams();\r\n  const [userName, setUserName] = useState(\"-\");\r\n  var signatureEndpoint = \"https://neoestudio.net/api/JwtToken\";\r\n  var sdkKey = \"ejMUC7sZJxrReEZ4iLrllWD4iYqM9W6tOqpS\";\r\n  var meetingNumber = \"4269760334\";\r\n  var leaveUrl = window.location.href;\r\n  var userEmail = \"\";\r\n  var passWord = \"Ehkuc2\";\r\n  // pass in the registrant's token if meeting or webinar requires registration.\r\n  var registrantToken = \"\";\r\n\r\n  function HideJoinAudio() {\r\n    let joinBtn = document.getElementsByClassName(\r\n      \"join-audio-by-voip__join-btn\"\r\n    )[0];\r\n\r\n    if (joinBtn) {\r\n      wait(JoinAudioAuto, 0.5);\r\n    } else {\r\n      wait(OpenJoinAudio, 0.5);\r\n      wait(JoinAudioAuto, 0.5);\r\n    }\r\n\r\n    return;\r\n  }\r\n\r\n  function OpenJoinAudio() {\r\n    let btn = document.getElementsByClassName(\"join-audio-container__btn\")[0];\r\n    let joinDialog = document.getElementsByClassName(\"join-dialog\")[0];\r\n\r\n    if (btn && !joinDialog) {\r\n      btn.click();\r\n    }\r\n\r\n    return;\r\n  }\r\n\r\n  function JoinAudioAuto() {\r\n    let btn = document.getElementsByClassName(\r\n      \"join-audio-by-voip__join-btn\"\r\n    )[0];\r\n\r\n    if (btn) {\r\n      btn.click();\r\n    }\r\n\r\n    return;\r\n  }\r\n\r\n  const wait = (callback, seconds) => {\r\n    return window.setTimeout(callback, seconds * 1000);\r\n  };\r\n\r\n  function getSignature() {\r\n    fetch(signatureEndpoint, {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({\r\n        meetingNumber: meetingNumber,\r\n        role: 0,\r\n      }),\r\n    })\r\n      .then((res) => res.json())\r\n      .then((response) => {\r\n        startMeeting(response.token);\r\n      })\r\n      .catch((error) => {\r\n        console.error(error);\r\n      });\r\n  }\r\n\r\n  function startMeeting(signature) {\r\n    //document.getElementsByTagName('header')[0].style.display='none';\r\n    document.getElementById(\"zmmtg-root\").style.display = \"block\";\r\n\r\n    ZoomMtg.init({\r\n      leaveUrl: leaveUrl,\r\n      success: (success) => {\r\n        console.log(\"success!\");\r\n        ZoomMtg.join({\r\n          signature: signature,\r\n          meetingNumber: meetingNumber,\r\n          userName: userName,\r\n          sdkKey: sdkKey,\r\n          userEmail: userEmail,\r\n          passWord: passWord,\r\n          success: (success) => {\r\n            console.log(\"kk\");\r\n            HideJoinAudio();\r\n          },\r\n          error: (error) => {\r\n            console.log(error);\r\n          },\r\n        });\r\n      },\r\n      error: (error) => {\r\n        console.log(error);\r\n      },\r\n    });\r\n  }\r\n\r\n  const decryptUser = () => {\r\n    const userId = searchParams.get(\"id\"); // \"testCode\"\r\n\r\n    fetch(\"https://neoestudio.net/api/user\", {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({\r\n        id: userId,\r\n      }),\r\n    })\r\n      .then((res) => res.json())\r\n      .then((response) => {\r\n        if (response.status === \"Successfull\") {\r\n          setUserName(response.data.name);\r\n          console.log(response.data.name);\r\n        } else {\r\n          console.log(response);\r\n          alert(\r\n            \"No se puede unir a la clase en vivo, el usuario no estÃ¡ registrado.\"\r\n          );\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.error(error);\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    decryptUser();\r\n    getSignature();\r\n  }, []);\r\n\r\n  return <div></div>;\r\n};\r\n\r\nexport default Directo;\r\n"],"sourceRoot":""}